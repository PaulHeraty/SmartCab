Simulator.run(): Trial 0
Environment.reset(): Trial set up with start = (3, 1), destination = (6, 4), deadline = 30
RoutePlanner.route_to(): destination = (6, 4)
STATE: ('left', 'red', None, None)
  Best action left  Best Score 0
  maxNextStateQval : 0
  UPDATE: ('left', 'red', None, None) = 0
  LearningAgent.update(): deadline = 30, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = -1.0
STATE: ('left', 'red', None, None)
  Best action right  Best Score 0
  maxNextStateQval : 0
  UPDATE: ('left', 'green', None, None) = 0
  LearningAgent.update(): deadline = 29, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
STATE: ('right', 'green', None, None)
  Best action left  Best Score 0
  maxNextStateQval : 0
  UPDATE: ('right', 'red', None, None) = 0
  LearningAgent.update(): deadline = 28, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = -0.5
STATE: ('left', 'red', None, None)
  Best action right  Best Score 0
  maxNextStateQval : 0
  UPDATE: ('left', 'green', None, None) = 0
  LearningAgent.update(): deadline = 27, inputs = {'light': 'green', 'oncoming': None, 'right': 'left', 'left': None}, action = right, reward = -0.5
STATE: ('right', 'green', None, None)
  Best action left  Best Score 0
  maxNextStateQval : 0
  UPDATE: ('right', 'red', None, None) = 0
  LearningAgent.update(): deadline = 26, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = -0.5
STATE: ('left', 'green', None, None)
  Best action left  Best Score 0
  maxNextStateQval : 0
  UPDATE: ('left', 'green', None, None) = 0
  LearningAgent.update(): deadline = 25, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = 2.0
STATE: ('forward', 'red', None, 'right')
  Best action left  Best Score 0
  maxNextStateQval : 0
  UPDATE: ('forward', 'red', None, 'right') = 0
  LearningAgent.update(): deadline = 24, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': 'right'}, action = left, reward = -1.0
STATE: ('forward', 'red', None, None)
  Best action left  Best Score 0
  maxNextStateQval : 0
  UPDATE: ('forward', 'red', None, None) = 0
  LearningAgent.update(): deadline = 23, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = -1.0
STATE: ('forward', 'red', None, None)
  Best action right  Best Score 0
  maxNextStateQval : 0
  UPDATE: ('forward', 'red', None, None) = 0
  LearningAgent.update(): deadline = 22, inputs = {'light': 'red', 'oncoming': None, 'right': 'forward', 'left': None}, action = right, reward = -0.5
STATE: ('left', 'green', None, None)
  Best action left  Best Score 1.0
  maxNextStateQval : 1.0
  UPDATE: ('left', 'green', None, None) = 0
  LearningAgent.update(): deadline = 21, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = 2.0
STATE: ('forward', 'green', None, None)
  Best action left  Best Score 0
  maxNextStateQval : 0
  UPDATE: ('forward', 'green', None, None) = 0
  LearningAgent.update(): deadline = 20, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = -0.5
STATE: ('right', 'green', None, None)
  Best action left  Best Score 0
  maxNextStateQval : 0
  UPDATE: ('right', 'green', None, None) = 0
  LearningAgent.update(): deadline = 19, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = -0.5
STATE: ('right', 'red', None, None)
  Best action right  Best Score 0
  maxNextStateQval : 0
  UPDATE: ('right', 'green', None, None) = 0
  LearningAgent.update(): deadline = 18, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
STATE: ('right', 'green', None, None)
  Best action right  Best Score 1.0
  maxNextStateQval : 1.0
  UPDATE: ('right', 'green', None, None) = 0
  LearningAgent.update(): deadline = 17, inputs = {'light': 'green', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = 2.0
STATE: ('forward', 'green', None, None)
  Best action right  Best Score 0
  maxNextStateQval : 0
  UPDATE: ('forward', 'red', None, None) = 0
  LearningAgent.update(): deadline = 16, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
STATE: ('left', 'red', 'right', None)
  Best action left  Best Score 0
  maxNextStateQval : 0
  UPDATE: ('left', 'red', 'right', None) = 0
  LearningAgent.update(): deadline = 15, inputs = {'light': 'red', 'oncoming': 'right', 'right': None, 'left': None}, action = left, reward = -1.0
STATE: ('left', 'green', None, None)
  Best action left  Best Score 2.0005
  maxNextStateQval : 0
  UPDATE: ('left', 'red', None, None) = 0
  LearningAgent.update(): deadline = 14, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = 2.0
STATE: ('forward', 'red', None, None)
  Best action forward  Best Score 0
  maxNextStateQval : 0
  UPDATE: ('forward', 'red', None, None) = 0
  LearningAgent.update(): deadline = 13, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = forward, reward = -1.0
STATE: ('forward', 'green', None, None)
  Best action right  Best Score 0
  maxNextStateQval : 0
  UPDATE: ('forward', 'red', None, None) = 0
  LearningAgent.update(): deadline = 12, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = right, reward = -0.5
STATE: ('left', 'red', None, None)
  Best action left  Best Score 0.5
  maxNextStateQval : 0.5
  UPDATE: ('left', 'red', None, None) = 0
  LearningAgent.update(): deadline = 11, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = -1.0
STATE: ('left', 'red', None, None)
  Best action left  Best Score 0.00025
  maxNextStateQval : 0.00025
  UPDATE: ('left', 'red', None, None) = 0
  LearningAgent.update(): deadline = 10, inputs = {'light': 'red', 'oncoming': None, 'right': None, 'left': None}, action = left, reward = -1.0
STATE: ('left', 'green', None, None)
  Best action left  Best Score 2.0005
  maxNextStateQval : 0
  UPDATE: ('left', 'red', 'right', None) = 0
  LearningAgent.update(): deadline = 9, inputs = {'light': 'red', 'oncoming': 'right', 'right': None, 'left': None}, action = left, reward = 2.0
STATE: ('forward', 'red', None, None)
  Best action None  Best Score 0
